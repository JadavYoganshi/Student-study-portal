// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSP.Data;

#nullable disable

namespace SSP.Migrations
{
    [DbContext(typeof(StudyPortalDbContext))]
    [Migration("20250417182344_AddSubjectToHomework")]
    partial class AddSubjectToHomework
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SSP.Models.Domain.Admin", b =>
                {
                    b.Property<Guid>("A_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("A_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("A_Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            A_Id = new Guid("b7c9fbb0-04f9-4a62-8925-493f2d4377e2"),
                            A_Email = "admin@example.com",
                            A_Name = "Admin User",
                            A_Password = "hashedpassword"
                        });
                });

            modelBuilder.Entity("SSP.Models.Domain.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("SSP.Models.Domain.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeworkId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HomeworkDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<Guid>("S_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HomeworkId");

                    b.HasIndex("S_Id");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("SSP.Models.Domain.Record", b =>
                {
                    b.Property<int>("R_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomeworkId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TodoId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("R_Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SSP.Models.Domain.Student", b =>
                {
                    b.Property<Guid>("S_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("S_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("S_Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            S_Id = new Guid("3d6fa47d-1f9d-4d77-8e2d-f20c2584edda"),
                            S_Email = "test@example.com",
                            S_Name = "Test Student",
                            S_Password = "hashedpassword"
                        });
                });

            modelBuilder.Entity("SSP.Models.Domain.Todo", b =>
                {
                    b.Property<int>("TodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TodoId"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("S_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TodoId");

                    b.HasIndex("S_Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("SSP.Models.Domain.Homework", b =>
                {
                    b.HasOne("SSP.Models.Domain.Student", "Student")
                        .WithMany("Homeworks")
                        .HasForeignKey("S_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SSP.Models.Domain.Todo", b =>
                {
                    b.HasOne("SSP.Models.Domain.Student", "Student")
                        .WithMany("Todos")
                        .HasForeignKey("S_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SSP.Models.Domain.Student", b =>
                {
                    b.Navigation("Homeworks");

                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
