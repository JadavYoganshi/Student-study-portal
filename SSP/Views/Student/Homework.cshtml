@model List<SSP.Models.Domain.Homework>
@{
    ViewData["Title"] = "Homework";
}

<!-- SweetAlert2 & jQuery -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div class="container mt-5">
    <h2 class="mb-4" id="formTitle">📚 Create Homework</h2>

    <form asp-action="SaveHomework" asp-controller="Student" method="post" class="row g-3 mb-5">
        <input type="hidden" id="homeworkId" name="HomeworkId" value="0" />
        <input type="hidden" id="S_Id" name="S_Id" value="@ViewBag.StudentId" />

        <div class="col-md-6">
            <label class="form-label">Subject</label>
            <input type="text" name="Subject" class="form-control" required />
        </div>
        <div class="col-md-6">
            <label class="form-label">Title</label>
            <input type="text" name="Title" class="form-control" required />
        </div>

        <div class="col-12">
            <label class="form-label">Description</label>
            <textarea name="Description" class="form-control" rows="3" required></textarea>
        </div>

        <div class="col-md-6">
            <label class="form-label">Homework Date</label>
            <input type="date" name="HomeworkDate" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" required />
        </div>

        <div class="col-12">
            <button type="submit" id="submitBtn" class="btn btn-success">
                <i class="fa fa-plus"></i> Create Homework
            </button>
        </div>
    </form>

    <h3 class="mb-3">📝 Homework List</h3>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>#</th>
                        <th>Subject</th>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Homework Date</th>
                        <th>Due</th>
                        <th>Status</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        var hw = Model[i];
                        <tr id="homework-@hw.HomeworkId">
                            <td>@(i + 1)</td>
                            <td>@hw.Subject</td>
                            <td>@hw.Title</td>
                            <td>@hw.Description</td>
                            <td>@hw.HomeworkDate.ToString("yyyy-MM-dd")</td>
                            <td>@(hw.DueDate.HasValue ? hw.DueDate.Value.ToString("yyyy-MM-dd") : "N/A")</td>
                            <td>
                                <input type="checkbox" class="homework-status-checkbox form-check-input"
                                       id="status-@hw.HomeworkId"
                                @(hw.IsFinished ? "checked" : "")
                                       data-homework-id="@hw.HomeworkId" />
                                <span class="ms-2 status-label fw-bold @(hw.IsFinished ? "text-success" : "text-warning")">
                                    @(hw.IsFinished ? "Completed" : "Pending")
                                </span>
                            </td>
                            <td>
                                <button type="button" class="btn btn-sm btn-primary edit-btn"
                                        data-id="@hw.HomeworkId"
                                        data-subject="@hw.Subject"
                                        data-title="@hw.Title"
                                        data-description="@hw.Description"
                                        data-homeworkdate="@hw.HomeworkDate.ToString("yyyy-MM-dd")">
                                    <i class="fa fa-edit"></i> Edit
                                </button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-sm btn-danger delete-btn"
                                        data-id="@hw.HomeworkId"
                                        data-isfinished="@hw.IsFinished">
                                    <i class="fa fa-trash"></i> Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info">No homework found. Start by creating one above.</div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".homework-status-checkbox").change(function () {
                var checkbox = $(this);
                var homeworkId = checkbox.data("homework-id");
                var isFinished = checkbox.is(":checked");

                $.ajax({
                    url: '/Student/UpdateStatus',
                    type: 'POST',
                    data: { homeworkId: homeworkId, isFinished: isFinished },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire("Updated!", "Status updated successfully.", "success");
                            const label = checkbox.siblings(".status-label");
                            label.text(isFinished ? "Completed" : "Pending");
                            label.removeClass("text-warning text-success").addClass(isFinished ? "text-success" : "text-warning");
                        } else {
                            Swal.fire("Error", response.message, "error");
                            checkbox.prop("checked", !isFinished);
                        }
                    },
                    error: function () {
                        Swal.fire("Error", "Something went wrong.", "error");
                        checkbox.prop("checked", !isFinished);
                    }
                });
            });

            $(".delete-btn").click(function () {
                var homeworkId = $(this).data("id");
                var isFinished = $(this).data("isfinished");

                var confirmText = isFinished
                    ? "Are you sure you want to delete this completed homework?"
                    : "You have not completed this homework. Are you sure you want to delete it?";

                Swal.fire({
                    title: "Delete Confirmation",
                    text: confirmText,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, Delete!",
                    cancelButtonText: "Cancel"
                }).then(result => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/Student/DeleteHomework',
                            type: 'POST',
                            data: { homeworkId: homeworkId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire("Deleted!", "The homework has been deleted.", "success");
                                    $("#homework-" + homeworkId).remove();
                                } else {
                                    Swal.fire("Error", response.message, "error");
                                }
                            },
                            error: function () {
                                Swal.fire("Error", "Something went wrong.", "error");
                            }
                        });
                    }
                });
            });

            $(".edit-btn").click(function () {
                const id = $(this).data("id");
                const subject = $(this).data("subject");
                const title = $(this).data("title");
                const description = $(this).data("description");
                const homeworkDate = $(this).data("homeworkdate");

                $("#formTitle").text("✏️ Edit Homework");
                $("#submitBtn").html('<i class="fa fa-save"></i> Update Homework')
                    .removeClass("btn-success").addClass("btn-warning");

                $("#homeworkId").val(id);
                $("input[name='Subject']").val(subject);
                $("input[name='Title']").val(title);
                $("textarea[name='Description']").val(description);
                $("input[name='HomeworkDate']").val(homeworkDate);
            });

            // Success message from TempData
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: '@TempData["SuccessMessage"]',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'OK'
                        });
            </text>
        }
        });
    </script>
}
